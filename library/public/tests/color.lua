local Color = require("public.color")

describe("Color.fromRgba", function()
  test("red", function()
    expect(Color.fromRgba(255, 0, 0)).toDeepEqual(Color.colors.red)
  end)
  test("blue", function()
    expect(Color.fromRgba(0, 0, 255)).toDeepEqual(Color.colors.blue)
  end)
  test("maroon", function()
    expect(Color.fromRgba(128, 0, 0)).toDeepEqual(Color.colors.maroon)
  end)
  test("gray", function()
    expect(Color.fromRgba(128, 128, 128, 255)).toDeepEqual(Color.colors.gray)
  end)
  test("not lime", function()
    expect(Color.fromRgba(0, 255, 0, 0.99)).toNotDeepEqual(Color.colors.lime)
  end)
  test("not purple", function()
    expect(Color.fromRgba(128, 0, 128, 0)).toNotDeepEqual(Color.colors.purple)
  end)
end)

describe("Color.toRgba", function()
  test("red", function()
    expect(Color.toRgba(Color.colors.red)).toDeepEqual({255, 0, 0, 255})
  end)
  test("blue", function()
    expect(Color.toRgba(Color.colors.blue)).toDeepEqual({0, 0, 255, 255})
  end)
  test("maroon", function()
    expect(Color.toRgba(Color.colors.maroon)).toDeepEqual({128, 0, 0, 255})
  end)
  test("gray", function()
    expect(Color.toRgba(Color.colors.gray)).toDeepEqual({128, 128, 128, 255})
  end)
  test("not lime", function()
    expect(Color.toRgba(Color.colors.lime)).toNotDeepEqual({0, 255, 0, 200})
  end)
  test("not purple", function()
    expect(Color.toRgba(Color.colors.purple)).toNotDeepEqual({128, 0, 128, 0})
  end)
end)

describe("Color.fromHex", function()
  test("basic hex string", function()
    expect(Color.fromHex("00FF55")).toAlmostDeepEqual({0, 1, 0.33333, 1})
  end)
  test("0x string", function()
    expect(Color.fromHex("0xCC8823")).toAlmostDeepEqual({0.8, 0.5333, 0.1373, 1})
  end)
  test("0x string with alpha", function()
    expect(Color.fromHex("0x38F2D8A3")).toAlmostDeepEqual({0.220, 0.949, 0.847, 0.639})
  end)
  test("# string", function()
    expect(Color.fromHex("#44DF32")).toAlmostDeepEqual({0.267, 0.875, 0.196, 1})
  end)
  test("# string with alpha", function()
    expect(Color.fromHex("#C3B87E77")).toAlmostDeepEqual({0.765, 0.722, 0.494, 0.467})
  end)
  test("black", function()
    expect(Color.fromHex("000000")).toDeepEqual({0, 0, 0, 1})
  end)
end)

xdescribe("Color.toHex", function()
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
end)

xdescribe("Color.fromHsv", function()
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
end)

xdescribe("Color.toHsv", function()
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
end)

xdescribe("Color.set", function()
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
  test("", function()
    expect().toDeepEqual({})
  end)
end)
